// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	reservation "airbnb/feature/reservation"

	mock "github.com/stretchr/testify/mock"
)

// ReservationService is an autogenerated mock type for the ReservationService type
type ReservationService struct {
	mock.Mock
}

// Create provides a mock function with given fields: newReservation
func (_m *ReservationService) Create(newReservation reservation.Core) (reservation.Core, error) {
	ret := _m.Called(newReservation)

	var r0 reservation.Core
	if rf, ok := ret.Get(0).(func(reservation.Core) reservation.Core); ok {
		r0 = rf(newReservation)
	} else {
		r0 = ret.Get(0).(reservation.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(reservation.Core) error); ok {
		r1 = rf(newReservation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewReservationService interface {
	mock.TestingT
	Cleanup(func())
}

// NewReservationService creates a new instance of ReservationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReservationService(t mockConstructorTestingTNewReservationService) *ReservationService {
	mock := &ReservationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
